#!/usr/bin/bash

## This script is currently written for Red Hat Base systems
## It will be developed for other systems in the future



username=$USER


time=`date`


Admin_Fstep="/tmp/Admin_Fstep"
if [ -d "$Admin_Fstep" ]; then
	    echo "$Admin_Fstep [ Exists ]"
    else
	     mkdir /tmp/Admin_Fstep
fi

echo "Scan Start at : $time" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
echo "Scan Start at : $time" 



os_info(){

	echo "============================= OS Release ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	cat /etc/os-release >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "==================================================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	uname -a >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "============================= HostName Info ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	hostnamectl >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "============================== Uptime ================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	uptime >> /tmp/Admin_Fstep/Linux_DataInfo.txt



	echo "Os Information check [ OK ]"

}

user(){



	echo "============================== User ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	who -Hu >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "============================== User Terminal ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	grep sh$ /etc/passwd  >> /tmp/Admin_Fstep/Linux_DataInfo.txt 



	echo "User Information Check [ OK ]"

}


check_vm(){

	echo "============================== VM or Physical ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "check system is VM or physical :"
	
	



	echo "============================== System Manufacture ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 dmidecode -s system-manufacturer  >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "============================== System Product Name ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 dmidecode -s system-product-name  >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "============================== System Version ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 dmidecode -s system-version  >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 
	echo "============================== System UUID ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 dmidecode -s system-uuid  >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "============================== System Serial Number ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 dmidecode -s system-serial-number  >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "============================== System Bios Version ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 dmidecode -s bios-version  >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "============================== System Bios Vendor ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 dmidecode -s bios-vendor >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "============================== Chasis Serial Number ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 dmidecode -s chassis-serial-number >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	 
	echo "============================== HardWare Lists ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 lshw -c system | grep product | head -1 >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "============================== Product Name ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 cat /sys/class/dmi/id/product_name >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "============================== System Vendor ===================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 cat /sys/class/dmi/id/sys_vendor >> /tmp/Admin_Fstep/Linux_DataInfo.txt



	echo "Physical or Virtual check [ OK ]"
 }


check_hardware(){


	echo "=============================== Check Hardware ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "Check Hardware of System :"
	
	echo "=============================== CPU ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	cat /proc/cpuinfo >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "=============================== Memory ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
       	cat /proc/meminfo >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "=============================== Network InterFace ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	ifconfig -a >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "=============================== Hardware Info ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 sudo lshw >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "=============================== pci Connections ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 sudo lspci >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "=============================== Hardware Summery  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 dmidecode >> /tmp/Admin_Fstep/Linux_DataInfo.txt


	echo "check HardWare Information [ OK ]"
}


programs(){


	Ubuntu=`cat /etc/os-release | grep -o ubuntu | head -1`
	fedora=`cat /etc/os-release | grep -o fedora | head -1`
	suse=`cat /etc/os-release | grep -o suse | head -1`


	if [ "$Ubuntu" == "ubuntu" ];then
		
	 	echo "=============================== Installed Applications  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		echo "=============================== /usr/bin  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		ls /usr/bin >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	 	echo "=============================== /usr/sbin  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		ls /usr/sbin >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		apt list --installed >> /tmp/Admin_Fstep/APP/what_istalled.txt
	
	elif [ "$fedora" == "fedora" ];then
		echo "=============================== rpm ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 	sudo rpm -qa >> /tmp/Admin_Fstep/APP/what_istalled.txt
	 	yum repolist >> /tmp/Admin_Fstep/APP/repolist.txt
	 	yum repoinfo >> /tmp/Admin_Fstep/APP/repositoru_info.txt
	 	echo "=============================== Desktop Applications  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		ls /usr/share/applications | awk -F '.desktop' ' { print $1}' - >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	 	echo "=============================== /usr/bin  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		ls /usr/bin >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	 	echo "=============================== /usr/sbin  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		ls /usr/sbin >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	elif [ "$suse" == "suse" ];then
		echo "=============================== Displaying Package (zyppper)  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		zypper search --installed-only >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		echo "=============================== Desktop Applications  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		ls /usr/share/applications | awk -F '.desktop' ' { print $1}' - >> /tmp/Admin_Fstep/Linux_DataInfo.txt

		echo "=============================== /usr/bin  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		ls /usr/bin >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		echo "=============================== /usr/sbin  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		ls /usr/sbin >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		echo "=============================== rpm  ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		rpm -qa >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	else
		echo "Sorry... Can Noy detect Your OS or Your Distributions Not Supported"
	fi



	echo "Application check [ OK ]"

}


process(){
	echo "=============================== Process ==================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "Check Process and Service on System:"  >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	
	echo "================================= All Process ====================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	ps -ef  >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	
	ps auxf  >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "==========================================================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "Procces check [ OK ]"
}

network(){

	echo "=================================== Network Connections ======================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	
	echo "Check Network Connections:"


	 sudo netstat -tulpn >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 sudo netstat -anp >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "=================================================================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "============================ Detail ===============================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt



	echo "============================ open Files ===============================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 sudo lsof -i >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	 echo "============================ Monitor All Network Connections (ss) ===============================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 sudo ss >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	 echo "============================ Monitor tcp Listening Connections (ss) ===============================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 sudo ss -lt  >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 echo "============================ Monitor udp Listening Connections (ss) ===============================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 sudo ss -lu  >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "============================ Name Servers ===============================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 cat /etc/resolv.conf >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "Network Check [ OK ]"

}

kernel(){

	echo "================================= Kernel Modules ==========================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "Check Kernel Modules:"

	sudo lsmod >> /tmp/Admin_Fstep/Linux_DataInfo.txt


	echo "Kernel parameters check [ OK ]"
}



logs(){

	echo "================================= Check System Logs ==========================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt


	echo "Check Boot Logs ..."
	
	sudo dmesg >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	sudo journalctl >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "system Logs check [ OK ]"

}


Firewall(){

	echo "=================================== Firewall ========================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	firewalld_status=`sudo systemctl status firewalld | grep -o "Active: active"`

	if [ -f "/usr/sbin/firewalld" ] && [ "$firewalld_status" == "Active: active" ];then
		sudo firewall-cmd --list-ports >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		sudo firewall-cmd --list-services >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		sudo firewall-cmd --list-all >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		sudo firewall-cmd --list-all-zones >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		sudo firewall-cmd --list-interfaces >> /tmp/Admin_Fstep/Linux_DataInfo.txt


	elif [ -f "/usr/sbin/firewalld" ];then
		sudo systemctl start firewalld
		sudo firewall-cmd --list-ports >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		sudo firewall-cmd --list-services >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		sudo firewall-cmd --list-all >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		sudo firewall-cmd --list-all-zones >> /tmp/Admin_Fstep/Linux_DataInfo.txt
		sudo firewall-cmd --list-interfaces >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	else
		echo "Firerwalld Not installed On system"
	fi

	echo "=================================== Iptables Rules ========================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	 sudo iptables-save >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "Firewall Rules and configurations Check [ OK ]"

}



suid(){

	echo "=================================== check Suid ========================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	sudo find / -perm 4000 >> /tmp/Admin_Fstep/Linux_DataInfo.txt

	echo "suid Check [ OK ]"
}




perm(){

	echo "==================================== check Permissions =======================================" >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "Start check Permissions of system [ Please Wait ] ..."
	sudo find / -perm 777 >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	sudo find / -perm 775 >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	sudo find / -perm 666 >> /tmp/Admin_Fstep/Linux_DataInfo.txt
	echo "Permissions Check [ OK ]"
}


result(){



echo -e "\n<< What This Script Done >> \n"

DATA=(1.OS_Information 2.user_Information 3.check_Virtual_or_Physical 4.check_Hardware 5.check_Apps_or_Programs 6.check_process 7.check_Network 8.check_Kernel_paramaters 9.check_Logs 10.check_Firewall 11.check_suid 12.check_Permissions)

for d in ${DATA[@]};do
	echo $d
	sleep 1
done


}


menu(){
	echo "============================================="
	echo "1.Start Gather system information"
	echo "2.Exit"
	echo "============================================="
	printf "> "
	read option

	if [ "$option" = 1 ];then
		os_info
		user
		check_vm
		check_hardware
		programs
		process
		network
		kernel
		logs
		Firewall
		suid
		perm
		result
	elif [ "$option" = 2 ];then
		exit 0
	else
		echo "Enter Valid Number"
	fi
}

menu



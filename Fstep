#!/usr/bin/bash

## This script is currently written for Red Hat Base systems
## It will be developed for other systems in the future



username=$USER


time=`date`


Admin_Fstep="/home/$username/Admin_Fstep"
if [ -d "$Admin_Fstep" ]; then
	    echo "$Admin_Fstep exists."
    else
	     mkdir /home/$username/Admin_Fstep
fi

echo "Time of Scaning System is: $time" > Time.txt


os_info(){

	os_info_dir="/home/$username/Admin_Fstep/OS_INFO"
	if [ -d "$os_info_dir" ]; then
		    echo "$os_info_dir exists."
	    else
		     mkdir /home/$username/Admin_Fstep/OS_INFO
	fi



	cat /etc/os-release > /home/$username/Admin_Fstep/OS_INFO/os_release.txt
	uname -a > /home/$username/Admin_Fstep/OS_INFO/name.txt 
	hostnamectl > /home/$username/Admin_Fstep/OS_INFO/hostnamectl.txt 



	uptime > /home/$username/Admin_Fstep/OS_INFO/uptime.txt 




}

user(){

	user_info_dir=/home/$username/Admin_Fstep/USER_INFO
	if test -d "$user_info_dir"; then
		    echo "$user_info_dir exists."
	    else
		     mkdir /home/$username/Admin_Fstep/USER_INFO
	fi



	who -Hu > /home/$username/Admin_Fstep/USER_INFO/user.txt 
	grep sh$ /etc/passwd > /home/$username/Admin_Fstep/USER_INFO/user_terminal.txt 




}


check_vm(){

	echo "check system is VM or physical :"
	
	
	vm_info_dir="/home/$username/Admin_Fstep/VM"
	if [ -d "$vm_info_dir" ]; then
		    echo "$vm_info_dir exists."
	    else
		     mkdir /home/$username/Admin_Fstep/VM
	fi



	 # dmidecode -s system-manufacturer > /home/$username/Admin_Fstep/VM/manufacturer.txt
	 # dmidecode -s system-product-name > /home/$username/Admin_Fstep/VM/product_name.txt
	 lshw -c system | grep product | head -1 > /home/$username/Admin_Fstep/VM/hardaware.txt
	 cat /sys/class/dmi/id/product_name > /home/$username/Admin_Fstep/VM/pruduct_name2.txt
	 cat /sys/class/dmi/id/sys_vendor > /home/$username/Admin_Fstep/VM/system_vendor.txt



 }


check_hardware(){

	hw_info_dir=/home/$username/Admin_Fstep/HardWare
	if test -d "$hw_info_dir"; then
		    echo "$hw_info_dir exists."
	    else
		     mkdir /home/$username/Admin_Fstep/HardWare
	fi



	echo "Check Hardware of System:"

	 cat /proc/cpuinfo > /home/$username/Admin_Fstep/HardWare/cpuinfo.txt

	 cat /proc/meminfo > /home/$username/Admin_Fstep/HardWare/memory_info.txt

	ifconfig -a > /home/$username/Admin_Fstep/HardWare/interface_configuration.txt

	 sudo lshw > /home/$username/Admin_Fstep/HardWare/all_hw.txt

	 sudo lspci > /home/$username/Admin_Fstep/HardWare/pci.txt

	 # dmidecode > /home/$username/Admin_Fstep/HardWare/dmidecode.txt


}

programs(){

	app_info_dir=/home/$username/Admin_Fstep/APP
	if test -d "$app_info_dir"; then
		    echo "$app_info_dir exists."
	    else
		     mkdir /home/$username/Admin_Fstep/APP
	fi


	echo "check whitch Program installed on System:"

	 sudo rpm -qa > /home/$username/Admin_Fstep/APP/what_istalled.txt
	 # yum repolist > /home/$username/Admin_Fstep/APP/repolist.txt
	 # yum repoinfo > /home/$username/Admin_Fstep/APP/repositoru_info.txt



}

process(){
	process_info_dir=/home/$username/Admin_Fstep/Process
	if test -d "$process_info_dir"; then
		    echo "$process_info_dir exists."
	    else
		     mkdir /home/$username/Admin_Fstep/Process
	fi


	echo "Check Process and Service on System:"

	 pstree -pa 1 > /home/$username/Admin_Fstep/Process/pstree.txt
	 ps -ef > /home/$username/Admin_Fstep/Process/precess.txt
	 ps auxf > /home/$username/Admin_Fstep/Process/full_process.txt

}

network(){

	net_info_dir=/home/$username/Admin_Fstep/Network
	if test -d "$net_info_dir"; then
		    echo "$net_info_dir exists."
	    else
		     mkdir /home/$username/Admin_Fstep/Network
	fi


	
	echo "Check Network Connections:"


	 sudo netstat -tulpn > /home/$username/Admin_Fstep/Network/network_conections.txt
	echo "=================================================================================" > /home/$username/Admin_Fstep/Network/network_connections.txt
	echo "============================Detail===============================================" > /home/$username/Admin_Fstep/Network/network_connections.txt


	 sudo netstat -anp > /home/$username/Admin_Fstep/Network/network_connections.txt

	 sudo lsof -i > /home/$username/Admin_Fstep/Network/openFiles.txt

	 sudo ss > /home/$username/Admin_Fstep/Network/socket.txt

	cat /etc/resolv.conf > /home/$username/Admin_Fstep/Network/resolv.txt



}

kernel(){


	kernel_info_dir=/home/$username/Admin_Fstep/Kernel
	if test -d "$kernel_info_dir"; then
		    echo "$kernel_info_dir exists."
	    else
		     mkdir /home/$username/Admin_Fstep/Kernel
	fi


	echo "Check Kernel Modules:"

	sudo lsmod > /home/$username/Admin_Fstep/Kernel/Kernel_Modules.txt


}



logs(){

	log_info_dir=/home/$username/Admin_Fstep/LOG
	if test -d "$log_info_dir"; then
		    echo "$log_info_dir exists."
	    else
		     mkdir /home/$username/Admin_Fstep/LOG
	fi


	echo "Check Logs:"

	 sudo dmesg > /home/$username/Admin_Fstep/LOG/dmesg.txt

	 sudo journalctl > /home/$username/Admin_Fstep/LOG/journal.txt



}


Firewall(){

	firewall_info_dir=/home/$username/Admin_Fstep/Firewall
	if test -d "$firewall_info_dir"; then
		    echo "$firewall_info_dir exists."
	    else
		     mkdir /home/$username/Admin_Fstep/Firewall
	fi



	 sudo iptables-save >  /home/$username/Admin_Fstep/Firewall/iptables_dump 


}



suid(){
	sudo find / -perm -u+s > /home/$username/Admin_Fstep/SUID
}


menu(){

	echo "1.Start Gather system information"
	echo "2.Exit"
	
	read option

	if [ "$option" = 1 ];then
		os_info
		user
		# check_vm
		check_hardware
		programs
		process
		network
		kernel
		logs
		Firewall
		suid
	elif [ "$option" = 2 ];then
		exit 0
	else
		echo "Enter Valid Number"
	fi
}

menu
